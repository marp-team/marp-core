version: 2.1

orbs:
  codecov: codecov/codecov@5.0.3

executors:
  node:
    parameters:
      version:
        type: string
        default: lts
    docker:
      - image: cimg/node:<< parameters.version >>
    working_directory: ~/marp-core

commands:
  install:
    parameters:
      force:
        type: boolean
        default: false
      postinstall:
        type: steps
        default: []
    steps:
      - restore_cache:
          keys:
            - v3-dependencies-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package-lock.json" }}-{{ .Branch }}
            - v3-dependencies-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package-lock.json" }}-
            - v3-dependencies-{{ .Environment.CIRCLE_JOB }}-

      - run: npm ci <<# parameters.force >>--force<</ parameters.force >>
      - steps: << parameters.postinstall >>

      - save_cache:
          key: v3-dependencies-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package-lock.json" }}-{{ .Branch }}
          paths:
            - ~/.npm

  audit:
    steps:
      - checkout
      - install:
          postinstall:
            - run: npm -s run check:audit

  prepare:
    parameters:
      force:
        type: boolean
        default: false
    steps:
      - run: node --version

      - checkout
      - install:
          force: << parameters.force >>

  lint:
    steps:
      - run:
          name: Prettier formatting
          command: npm run check:format

      - run:
          name: TypeScript type checking
          command: npm run check:ts

      - run:
          name: ESLint
          command: npm run lint:js

      - run:
          name: stylelint
          command: npm run lint:css

  test:
    steps:
      - run:
          name: Jest
          command: npm run test:coverage -- --ci --maxWorkers=2 --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: tmp/test-results

      - codecov/upload

      - store_test_results:
          path: tmp/test-results

      - store_artifacts:
          path: ./coverage
          destination: coverage

jobs:
  audit:
    executor: node
    steps:
      - audit

  test-node18:
    executor:
      name: node
      version: '18.20'
    steps:
      - prepare
      - lint
      - test

  test-node20:
    executor:
      name: node
      version: '20.18'
    steps:
      - prepare
      - lint
      - test

  test-node22:
    executor:
      name: node
      version: '22.12.0' # Specify LTS version for development
    steps:
      - prepare
      - lint
      - test

workflows:
  test:
    jobs:
      - audit
      - test-node18:
          requires:
            - audit
      - test-node20:
          requires:
            - audit
      - test-node22:
          requires:
            - audit
